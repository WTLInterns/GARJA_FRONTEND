{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/product/[id]",
      "regex": "^/product/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/product/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/account-settings",
      "regex": "^/account\\-settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/account\\-settings(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/analytics",
      "regex": "^/admin/analytics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/analytics(?:/)?$"
    },
    {
      "page": "/admin/customers",
      "regex": "^/admin/customers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/customers(?:/)?$"
    },
    {
      "page": "/admin/dashboard",
      "regex": "^/admin/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/dashboard(?:/)?$"
    },
    {
      "page": "/admin/orders",
      "regex": "^/admin/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/orders(?:/)?$"
    },
    {
      "page": "/admin/products",
      "regex": "^/admin/products(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/products(?:/)?$"
    },
    {
      "page": "/admin/settings",
      "regex": "^/admin/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/settings(?:/)?$"
    },
    {
      "page": "/auth/callback",
      "regex": "^/auth/callback(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/callback(?:/)?$"
    },
    {
      "page": "/cart",
      "regex": "^/cart(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/cart(?:/)?$"
    },
    {
      "page": "/checkout",
      "regex": "^/checkout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/checkout(?:/)?$"
    },
    {
      "page": "/oauth-test",
      "regex": "^/oauth\\-test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/oauth\\-test(?:/)?$"
    },
    {
      "page": "/order-success",
      "regex": "^/order\\-success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/order\\-success(?:/)?$"
    },
    {
      "page": "/orders",
      "regex": "^/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/orders(?:/)?$"
    },
    {
      "page": "/products",
      "regex": "^/products(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/products(?:/)?$"
    },
    {
      "page": "/test-oauth",
      "regex": "^/test\\-oauth(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-oauth(?:/)?$"
    },
    {
      "page": "/test-storage",
      "regex": "^/test\\-storage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-storage(?:/)?$"
    },
    {
      "page": "/user/orders",
      "regex": "^/user/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/orders(?:/)?$"
    },
    {
      "page": "/wishlist",
      "regex": "^/wishlist(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/wishlist(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}